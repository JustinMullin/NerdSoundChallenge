package com.nerdery.soundchallenge.services.midigenerators;

import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import javax.sound.midi.InvalidMidiDataException;
import javax.sound.midi.Sequence;
import javax.sound.midi.Track;
import java.util.stream.IntStream;

/**
 * <h1>Generates the Mario theme song!</h1>
 * Well... one of them at least - there are so many.<br/><br/>
 *
 * This MIDI contains 4 tracks, each with notes on a separate channel.<br/>
 * 
 * <em>FAIR WARNING!:</em> I used a version of this song that I found on the web as a guide (I wouldn't have been able
 * to do it otherwise). I <em>DID NOT</em> decode, parse, capture, or otherwise programatically extract any data from
 * the file that I downloaded. I <em>ONLY</em> used/listened to it in my MIDI player to observe how the individual notes
 * were placed. I can assure you that I determined and coded each and every note!<br/><br/>
 * 
 * That being said, this song has a LOT of repetition, so with a good ear and some math, it wasn't too hard.<br/><br/>
 * 
 * Also, this was a lot of fun!
 *
 * @author Ryan Evans (revans@nerdery.com)
 */
@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
public class MarioGenerator extends AbstractMidiGenerator {

    protected static final int MELODY_VOICE = 0x50;
    protected static final int HARMONY_VOICE = 0x50;
    protected static final int BASS_VOICE = 0x1A;
    protected static final int PERCUSSION_VOICE = 0x73;

    private static final long SIXTEENTH_TICKS = 8;
    private static final long QUARTER_TICKS = SIXTEENTH_TICKS * 2;
    private static final long HALF_TICKS = QUARTER_TICKS * 2;
    private static final long WHOLE_TICKS = HALF_TICKS * 2;
    private static final long THREE_QUARTERS_TICKS = WHOLE_TICKS - QUARTER_TICKS;
    private static final long FIVE_QUARTERS_TICKS = WHOLE_TICKS + QUARTER_TICKS;
    private static final long WHOLE_SHORT_TICKS = WHOLE_TICKS - SIXTEENTH_TICKS;
    
    private Track track;

    @Override
    protected void addNotes(Sequence sequence) throws InvalidMidiDataException {
        track = buildTrack(sequence, "Melody", 0);
        setVoice(track, MELODY_VOICE);
        buildMelody();
        endTrack(track, WHOLE_TICKS);

        track = buildTrack(sequence, "Harmony", 1);
        setVoice(track, HARMONY_VOICE);
        buildHarmony();
        endTrack(track, WHOLE_TICKS);

        track = buildTrack(sequence, "Bass", 2);
        setVoice(track, BASS_VOICE);
        buildBass();
        endTrack(track, WHOLE_TICKS);

        track = buildTrack(sequence, "Percussion", 3);
        setVoice(track, PERCUSSION_VOICE);
        buildPercussion();
        endTrack(track, WHOLE_TICKS);
    }

    private void buildMelody() throws InvalidMidiDataException {
        note(16, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);

        note(12, WHOLE_TICKS * 3 - QUARTER_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(10, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, HALF_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(19, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(10, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, HALF_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(19, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(19, WHOLE_SHORT_TICKS + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(18, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(19, SIXTEENTH_TICKS + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(18, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(24, HALF_TICKS, QUARTER_TICKS);
        note(24, HALF_TICKS, QUARTER_TICKS);
        note(24, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(19, WHOLE_TICKS * 2, QUARTER_TICKS);
        note(18, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(15, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(14, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(12, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(19, WHOLE_TICKS * 3 + HALF_TICKS, QUARTER_TICKS);
        note(18, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(19, SIXTEENTH_TICKS + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(18, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(24, HALF_TICKS, QUARTER_TICKS);
        note(24, HALF_TICKS, QUARTER_TICKS);
        note(24, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(19, WHOLE_TICKS * 2, QUARTER_TICKS);
        note(18, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(15, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(14, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(12, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(12, WHOLE_TICKS * 2 + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, SIXTEENTH_TICKS + WHOLE_TICKS * 3, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);

        note(12, WHOLE_TICKS * 2 + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(10, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, HALF_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(19, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(10, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, HALF_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(19, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(11, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(11, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(14, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);

        note(16, WHOLE_TICKS * 2 + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(11, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(11, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(14, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);

        note(12, WHOLE_TICKS * 2 + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, SIXTEENTH_TICKS + WHOLE_TICKS * 3, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, HALF_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(16, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);

        note(16, WHOLE_TICKS * 2 + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(11, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(21, QUARTER_TICKS, QUARTER_TICKS);
        note(19, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(11, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(14, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
    }

    private void buildHarmony() throws InvalidMidiDataException {
        note(6, QUARTER_TICKS);
        note(6, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(6, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(7, FIVE_QUARTERS_TICKS - SIXTEENTH_TICKS, QUARTER_TICKS);

        note(4, FIVE_QUARTERS_TICKS + SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(1, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(0, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(2, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(1, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(0, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(2, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, WHOLE_SHORT_TICKS + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, SIXTEENTH_TICKS + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, WHOLE_TICKS * 2, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(16, WHOLE_TICKS * 3 + HALF_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, SIXTEENTH_TICKS + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, HALF_TICKS, QUARTER_TICKS);
        note(17, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(16, WHOLE_TICKS * 2, QUARTER_TICKS);
        note(15, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(8, WHOLE_TICKS * 2 + THREE_QUARTERS_TICKS, QUARTER_TICKS);
        note(8, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(8, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, SIXTEENTH_TICKS + WHOLE_TICKS * 3, QUARTER_TICKS);
        note(8, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(6, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(6, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(6, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);

        note(4, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(1, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(0, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(2, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(1, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(0, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(11, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(9, HALF_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(2, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(14, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(14, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(8, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(8, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(8, SIXTEENTH_TICKS + WHOLE_TICKS * 3, QUARTER_TICKS);
        note(8, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(8, HALF_TICKS, QUARTER_TICKS);
        note(10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(6, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(6, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(6, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(11, HALF_TICKS, QUARTER_TICKS);
        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(17, QUARTER_TICKS, QUARTER_TICKS);
        note(16, QUARTER_TICKS, QUARTER_TICKS);
        note(14, QUARTER_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(9, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(5, HALF_TICKS, QUARTER_TICKS);
        note(12, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, HALF_TICKS, QUARTER_TICKS);
        note(5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(14, HALF_TICKS, QUARTER_TICKS);
        note(14, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(12, QUARTER_TICKS, QUARTER_TICKS);
        note(11, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(4, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, HALF_TICKS);
    }

    private void buildBass() throws InvalidMidiDataException {
        note(-10, QUARTER_TICKS);
        note(-10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(-5, FIVE_QUARTERS_TICKS - SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-5, FIVE_QUARTERS_TICKS + SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-6, HALF_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-8, HALF_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(4, QUARTER_TICKS, QUARTER_TICKS);
        note(5, QUARTER_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-3, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-6, HALF_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-8, HALF_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(4, QUARTER_TICKS, QUARTER_TICKS);
        note(5, QUARTER_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-3, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);
        note(19, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-4, HALF_TICKS, QUARTER_TICKS);
        note(-2, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-12, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);
        note(19, HALF_TICKS, QUARTER_TICKS);
        note(19, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-4, HALF_TICKS, QUARTER_TICKS);
        note(-2, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(0, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-12, HALF_TICKS, QUARTER_TICKS);

        note(-16, HALF_TICKS, QUARTER_TICKS);
        note(-9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-17, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(-16, HALF_TICKS, QUARTER_TICKS);
        note(-9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-17, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(-16, HALF_TICKS, QUARTER_TICKS);
        note(-9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-17, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(-5, FIVE_QUARTERS_TICKS, QUARTER_TICKS);

        note(-5, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(-8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(6, HALF_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-8, HALF_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(4, QUARTER_TICKS, QUARTER_TICKS);
        note(5, QUARTER_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-3, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-5, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-8, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-6, HALF_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-8, HALF_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(4, QUARTER_TICKS, QUARTER_TICKS);
        note(5, QUARTER_TICKS, QUARTER_TICKS);
        note(2, HALF_TICKS, QUARTER_TICKS);
        note(4, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-3, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-6, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-6, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-3, QUARTER_TICKS, QUARTER_TICKS);
        note(-1, QUARTER_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, HALF_TICKS, QUARTER_TICKS);

        note(-12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(-6, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-6, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-3, QUARTER_TICKS, QUARTER_TICKS);
        note(-1, QUARTER_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, HALF_TICKS, QUARTER_TICKS);

        note(-16, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(-9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-17, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(-16, HALF_TICKS, QUARTER_TICKS);
        note(-9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-17, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(-16, HALF_TICKS, QUARTER_TICKS);
        note(-9, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-4, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-17, WHOLE_SHORT_TICKS, QUARTER_TICKS);

        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-10, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(-5, FIVE_QUARTERS_TICKS, QUARTER_TICKS);

        note(-12, FIVE_QUARTERS_TICKS, QUARTER_TICKS);
        note(-6, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-10, HALF_TICKS, QUARTER_TICKS);
        note(-7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-1, HALF_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-12, HALF_TICKS, QUARTER_TICKS);
        note(-6, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(-7, HALF_TICKS, QUARTER_TICKS);
        note(0, HALF_TICKS, QUARTER_TICKS);
        note(0, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-5, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(-3, QUARTER_TICKS, QUARTER_TICKS);
        note(-1, QUARTER_TICKS, QUARTER_TICKS);
        note(0, QUARTER_TICKS, QUARTER_TICKS);
        note(-5, HALF_TICKS, QUARTER_TICKS);
        note(-12, HALF_TICKS, HALF_TICKS);
    }

    private void buildPercussion() throws InvalidMidiDataException {
        note(7, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, HALF_TICKS);
        note(7, HALF_TICKS + SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);

        repeat(11, () -> {
            note(7, QUARTER_TICKS);
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS);
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
        });

        note(7, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, HALF_TICKS);
        note(7, HALF_TICKS + SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        repeat(3, () -> {
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, HALF_TICKS);
            note(7, HALF_TICKS + SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        });

        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);

        repeat(3, () -> {
            note(7, QUARTER_TICKS);
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS);
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
        });

        note(7, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);

        repeat(7, () -> {
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
        });

        note(7, HALF_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, HALF_TICKS);
        note(7, HALF_TICKS + SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);

        repeat(3, () -> {
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, HALF_TICKS);
            note(7, HALF_TICKS + SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        });

        note(7, SIXTEENTH_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);

        repeat(2, () -> {
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
            note(7, HALF_TICKS, QUARTER_TICKS);
            note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
            note(7, SIXTEENTH_TICKS, HALF_TICKS);
            note(7, QUARTER_TICKS, QUARTER_TICKS);
        });

        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, HALF_TICKS);
        note(7, QUARTER_TICKS, QUARTER_TICKS);
        note(7, HALF_TICKS, QUARTER_TICKS);
        note(7, WHOLE_SHORT_TICKS, QUARTER_TICKS);
        note(7, SIXTEENTH_TICKS, WHOLE_TICKS);
    }

    @Override
    public String getName() {
        return "mario";
    }
    
    //

    /**
     * Semi-overrides {@link #addNote(Track, int, long)}, but adds the value of {@link #MIDDLE_C} to the value of
     * {@code note}.
     */
    private void note(int note, long duration) {
        try {
            addNote(track, MIDDLE_C + note, duration);
        } catch (InvalidMidiDataException e) {
            throw new IllegalStateException(e);
        }
    }

    /**
     * Semi-overrides {@link #addNote(Track, int, long, long)}, but adds the value of {@link #MIDDLE_C} to the value of
     * {@code note}.
     */
    private void note(int note, long pause, long duration) {
        try {
            addNote(track, MIDDLE_C + note, pause, duration);
        } catch (InvalidMidiDataException e) {
            throw new IllegalStateException(e);
        }
    }
    
    //
    
    private void repeat(int times, Runnable r) {
        IntStream.range(0, times).forEach(i -> r.run());
    }
}
